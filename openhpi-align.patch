--- openhpi-2.10.1/marshal/marshal.c.orig	2007-11-03 06:47:32.000000000 +0100
+++ openhpi-2.10.1/marshal/marshal.c	2007-11-03 22:54:30.116125607 +0100
@@ -342,16 +342,16 @@
 
        case eMtUint16:
        case eMtInt16:
-	/* compile error */
-//	    m = (tUint32)*(const tUint16 *)so;
-	    m = (tUint32)(*(const tUint16 *)(const void *)so);
+	    {
+	    tUint16 buf;
+	    memcpy(&buf, so, sizeof(tUint16));
+	    m = (tUint32)buf;
+	    }
 	    break;
 
        case eMtUint32:
        case eMtInt32:
-	/* compile error */
-//	    m = *(const tUint32 *)so;
-	    m = *(const tUint32 *)(const void *)so;
+	    memcpy(&m, so, sizeof(tUint32));
 	    break;
 
        default:
@@ -390,16 +390,16 @@
 
        case eMtUint16:
        case eMtInt16:
-	/* compile error */
-//	    size = (tUint32)*(const tUint16 *)so;
-	    size = (tUint32)*(const tUint16 *)(const void *)so;
+	    {
+	    tUint16 buf;
+	    memcpy(&buf, so, sizeof(tUint16));
+	    size = (tUint32)buf;
+	    }
 	    break;
 
        case eMtUint32:
        case eMtInt32:
-	/* compile error */
-//	    size = *(const tUint32 *)so;
-	    size = *(const tUint32 *)(const void *)so;
+	    memcpy(&size, so, sizeof(tUint32));
 	    break;
 
        default:
@@ -612,7 +612,7 @@
               if ( MarshalByteOrder() != byte_order )
                    v = bswap_16( v );
               
-              *(tUint16 *)data = v;
+              memcpy( data, &v, sizeof( tUint16 ) );
             }            
 
             return sizeof( tUint16 );
@@ -626,7 +626,7 @@
               if ( MarshalByteOrder() != byte_order )
                    v = bswap_32( v );
 
-              *(tUint32 *)data = v;
+              memcpy( data, &v, sizeof( tUint32 ) );
             }
 
             return sizeof( tUint32 );
@@ -640,7 +640,7 @@
               if ( MarshalByteOrder() != byte_order )
                    v = bswap_64( v );
 
-              *(tUint64 *)data = v;
+              memcpy( data, &v, sizeof( tUint64 ) );
             }
 
             return sizeof( tUint64 );
@@ -654,7 +654,7 @@
               if ( MarshalByteOrder() != byte_order )
                    v.m_u32 = bswap_32( v.m_u32 );
 
-              *(tFloat32 *)data = v.m_f32;
+              memcpy(data, &(v.m_f32), sizeof( tFloat32 ) );
             }
 
             return sizeof( tFloat32 );
@@ -668,7 +668,7 @@
               if ( MarshalByteOrder() != byte_order )
                    v.m_u64 = bswap_64( v.m_u64 );
 
-              *(tFloat64 *)data = v.m_f64;
+              memcpy( data, &(v.m_f64), sizeof( tFloat64 ) );
             }
 
             return sizeof( tFloat64 );
